# -*- coding: utf-8 -*-
"""ECE1513Assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ASIkhwNSDPyJvwThqDgq16TECarih9qh

# Arham Sheikh ECE1513 Assignment 2
"""

# Part 1

#1,

import matplotlib.pyplot as plt

# Input data
x = [1, 2, 3, 4, 5, 6, 7]
# Output data
t = [6, 4, 2, 1, 3, 6, 10]

# Create the scatter plot
plt.figure(figsize=(8, 6))
plt.scatter(x, t, color='blue', marker='o', label='Data points')
plt.title('Scatter Plot of Dataset D')
plt.xlabel('Input (x)')
plt.ylabel('Output (t)')
plt.grid()ÃŸ
plt.legend()
plt.show()

#2,

import numpy as np

# Input data
x = np.array([1, 2, 3, 4, 5, 6, 7])
# Output data
t = np.array([6, 4, 2, 1, 3, 6, 10])

# Fit a linear polynomial (degree 1)
w, b = np.polyfit(x, t, 1)

# Print the values of w (slope) and b (intercept)
print(f'Slope (w): {w}')
print(f'Intercept (b): {b}')

# Part 2

#5,

import numpy as np

x_values = np.array([1, 2, 3, 4, 5, 6, 7])
t_values = np.array([6, 4, 2, 1, 3, 6, 10])


X = np.column_stack((x_values, np.ones(x_values.shape[0])))
t = t_values


X_transpose = X.T  # Transpose of X
w1 = np.linalg.inv(X_transpose @ X) @ (X_transpose @ t)


w = w1[0]  # Slope
b = w1[1]  # Intercept

print(f"Weight (w): {w}, Intercept (b): {b}")
